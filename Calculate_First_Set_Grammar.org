* Example #1 
  - S -> X Y Z
  - X -> a X | Z | ~
  - Z -> W | Y | ~
  - Y -> c d | V | ~
  - V -> r d | ~
  - W -> ~

|NON TERMINAL  | STEP 1 | STEP 2     | STEP 3 | STEP 4 | STEP 5 |
|---+--------+------------+--------+--------+--------|
| S | {      | a, c, d, ~ |        |        |        |
|---+--------+------------+--------+--------+--------|
| X | {a, ~  |            |        |        |        |
|---+--------+------------+--------+--------+--------|
| Z | {~     | c, d       |        |        |        |
|---+--------+------------+--------+--------+--------|
| Y | {c, ~  | r          |        |        |        |
|---+--------+------------+--------+--------+--------|
| V | {r, ~  |            |        |        |        |
|---+--------+------------+--------+--------+--------|
| W | {~     |            |        |        |        |



** S -> X Y Z
   - Name = S
   - Symbols = {X, Y, Z}
    
** X -> a X 
   - Name = S
   - Symbols = {a, X}
** X -> Z
   - Name = X
   - Symbols = {Z}
** X -> ~
   Name = X
   Symbols = {~}
** Z -> W
   - Name = Z
   - Symbols = {W}
** Z -> Y
   - Name = Z
   - Symbols = {Y}
** Z -> ~
   Name = Z
   Symbols = {~}
** Y -> c d
   - Name : Y
   - Symbols = {c, d}
** Y -> V
   - Name = Y
   - Symbols = {V}
** Y -> ~ 
   - Name = V
   - Symbols = {~}
** V -> rd
   - Name = V
   - Symbols = {rd}
** V -> ~
   - Name = V
   - Symbols = {~}
** W -> ~
   - Name = W
   - Symbols = {~}    

* Casos identificados
  - Verificar que el conjunto primero no repita elementos al intentarlos agregar.
** Anulabilidad
   Esta se tiene que verifcar hasta el final.
* hide
  Ana Liliana Acuña Lara

* Expresion Regular para la validacion de la parte derecha
  "^(~?(<[a-zA-Z]+>)* ~?  ([a-zA-Z0-9]+)+~?(~?(<[a-zA-Z]+>)*~?([a-zA-Z0-9]+)*~?))+$"
"^(~?(\\|)?(<[a-zA-Z]+>)*(\\|)?~?(\\|)?([a-zA-Z0-9]+)+(\\|)?~?(\\|)?((\\|)?~?(\\|)?(<[a-zA-Z]+>)*(\\|)?~?(\\|)?([a-zA-Z0-9]+)*(\\|)?~?(\\|)?))+$"
"^((~(\\|)?)?(<[a-zA-Z]+>)*(\\|)?~?(\\|)?([a-zA-Z0-9]+)+(\\|)?~?(\\|)?((\\|)?~?(\\|)?(<[a-zA-Z]+>)*(\\|)?~?(\\|)?([a-zA-Z0-9]+)*(\\|)?~?(\\|)?))+$"
{^((\|?~)?(<\|?[a-zA-Z]+>)(\|?~)?(\|?[a-zA-Z0-9]+)(\|?~)?((\|?~)?(<\|?[a-zA-Z]+>)*(\|?~)?(\|?[a-zA-Z0-9]+)*(\|?~)?))+$}


"^(~?(<[a-zA-Z]+>)*~?(([a-zA-Z0-9]+)|\\*|\\+)*~?(~?(<[a-zA-Z]+>)*~?(([a-zA-Z0-9]+)|\\*|\\+)*~?))+(\\|~?(<[a-zA-Z]+>)*~?(([a-zA-Z0-9]+)|\\*|\\+)*~?(~?(<[a-zA-Z]+>)*~?(([a-zA-Z0-9]+)|\\*|\\+)*~?))*$"

"^(((~\\s*)?(([a-zA-Z0-9]+)|\\*|\\+)(~\\s*)?)\\s*)+(\\|\\s*((~\\s*)?(([a-zA-Z0-9]+)|\\*|\\+)*(~\\s*)?)*\\s*$"

"^\\s*((~?\\s*(([a-zA-Z0-9]+)|\\*|\\+)~?\\s*)\\s*)+(\\|\\s*(~?\\s*((([a-zA-Z0-9]+)|\\*|\\+)\\s*)*~?\\s*))*$"

* Example #2
S -> X Y Z
X ->a X 
X ->Z
X -> ''
Z -> W
Z ->Y
Z ->''
Y ->e d
Y -> V
Y ->''
V -> r d
V -> ''
W -> ''

| NON TERMINAL | STEP 1 | STEP 2 | STEP 3 | STEP 4 | STEP 5 |
|--------------+--------+--------+--------+--------+--------|
| S            |{       |a, e, ~ |r       |        |        |
| X            |{ a, ~  |        |e       |r       |        |
| Z            |{ ~     |e       |r       |        |        |
| Y            |{ e, ~  |r       |        |        |        |
| V            |{ r, ~  |        |        |        |        |
| W            |{ ~     |        |        |        |        |


FIRST table
| Nonterminal | FIRST      |
|-------------+------------|
| S           | {a,'',c,r} |
| x           | {a,'',c,r} |
| Z           | {'',c,r}   |
| Y           | {c,'',r}   |
| V           | {r,''}     |
| W           | {''}       |
|             |            |
	

* Example #3

|NON TERMINAL  | STEP 1 | STEP 2     | STEP 3 | STEP 4 | STEP 5 |
|---+--------+------------+--------+--------+--------|
A -> F a b c
A -> ''
A ->A E d
B ->c b F
B ->A d B 
B -> ''
F ->z k L m A
F -> A B F
E ->A B 
L -> A B F E L 


FIRST table
| Nonterminal | FIRST        |
|-------------+--------------|
| A           | {'',z,c,d,a} |
| B           | {c,'',d,z,a} |
| F           | {z,'',c,d,a} |
| E           | {'',c,d,z,a} |
| L           | {'',c,d,z,a} |

